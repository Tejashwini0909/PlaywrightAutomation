name: CI/CD Pipeline - Playwright Automation

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 5:30 AM UTC (11:00 AM IST)
    - cron: '30 5 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - simple
          - ci-friendly
          - smoke
          - tool-validation
      environment:
        description: 'Environment to test against'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  NODE_VERSION: '18'
  PLAYWRIGHT_BROWSERS_PATH: 0

jobs:
  # Job 1: Lint and Validate
  lint-validate:
    name: Lint & Validate
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate Playwright config
        run: npx playwright --version

      - name: Check for syntax errors
        run: node -c playwright.config.js

  # Job 2: Simple Tests
  simple-tests:
    name: Simple Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: lint-validate
    if: github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'simple' || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run Simple Tests
        run: npx playwright test tests/simple.spec.js --project=chromium
        env:
          CI: true

      - name: Upload Simple Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: simple-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Job 3: CI-Friendly Tests
  ci-friendly-tests:
    name: CI-Friendly Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: lint-validate
    if: github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'ci-friendly' || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run CI-Friendly Tests
        run: npx playwright test tests/ci-friendly.spec.js --project=chromium
        env:
          CI: true

      - name: Upload CI-Friendly Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-friendly-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Job 4: Smoke Tests (AI Model Validation)
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 120
    needs: lint-validate
    if: github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'smoke' || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run Smoke Tests
        run: npx playwright test tests/SmokeSuite/smokeTesting.spec.js --project=chromium
        env:
          CI: true
          STAGE_ENV: ${{ secrets.STAGE_ENV }}
          QA_USERNAME: ${{ secrets.QA_USERNAME }}
          QA_PASSWORD: ${{ secrets.QA_PASSWORD }}

      - name: Upload Smoke Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Job 5: Tool Validation Tests
  tool-validation-tests:
    name: Tool Validation Tests
    runs-on: ubuntu-latest
    timeout-minutes: 90
    needs: lint-validate
    if: github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'tool-validation' || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run Tool Validation Tests
        run: npx playwright test tests/ToolValidation/toolValidation.spec.js --project=chromium
        env:
          CI: true
          STAGE_ENV: ${{ secrets.STAGE_ENV }}
          QA_USERNAME: ${{ secrets.QA_USERNAME }}
          QA_PASSWORD: ${{ secrets.QA_PASSWORD }}

      - name: Upload Tool Validation Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tool-validation-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # Job 6: Test Report Generation
  test-report:
    name: Test Report
    runs-on: ubuntu-latest
    needs: [simple-tests, ci-friendly-tests, smoke-tests, tool-validation-tests]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: *-test-results
          merge-multiple: true

      - name: Generate combined test report
        run: |
          echo "# Test Execution Summary" > test-summary.md
          echo "## Execution Date: $(date)" >> test-summary.md
          echo "## Trigger: ${{ github.event_name }}" >> test-summary.md
          echo "## Branch: ${{ github.ref_name }}" >> test-summary.md
          echo "" >> test-summary.md
          
          echo "### Test Suite Results:" >> test-summary.md
          echo "- Simple Tests: ${{ needs.simple-tests.result }}" >> test-summary.md
          echo "- CI-Friendly Tests: ${{ needs.ci-friendly-tests.result }}" >> test-summary.md
          echo "- Smoke Tests: ${{ needs.smoke-tests.result }}" >> test-summary.md
          echo "- Tool Validation Tests: ${{ needs.tool-validation-tests.result }}" >> test-summary.md
          
          echo "" >> test-summary.md
          echo "### Artifacts:" >> test-summary.md
          echo "- Test results and reports are available in the artifacts section" >> test-summary.md
          echo "- Screenshots and videos are included for failed tests" >> test-summary.md

      - name: Upload Test Summary
        uses: actions/upload-artifact@v4
        with:
          name: test-summary
          path: test-summary.md
          retention-days: 30

  # Job 7: Staging Deployment (only for develop branch)
  staging-deployment:
    name: Staging Deployment
    runs-on: ubuntu-latest
    needs: [test-report]
    if: github.ref == 'refs/heads/develop' && (needs.smoke-tests.result == 'success' || needs.smoke-tests.result == 'skipped')
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Staging
        run: |
          echo "🚀 Deploying to staging environment..."
          echo "✅ All tests passed, proceeding with deployment"
          echo "📅 Deployment completed at $(date)"

      - name: Notify Deployment Success
        run: |
          echo "✅ Staging deployment successful"
          echo "🌐 Staging URL: https://staging.ai.future.works"

  # Job 8: Production Deployment (manual only)
  production-deployment:
    name: Production Deployment
    runs-on: ubuntu-latest
    needs: [test-report]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Production
        run: |
          echo "🚀 Deploying to production environment..."
          echo "✅ Manual deployment confirmed"
          echo "📅 Deployment completed at $(date)"

      - name: Notify Production Deployment
        run: |
          echo "✅ Production deployment successful"
          echo "🌐 Production URL: https://ai.future.works"